{"version":3,"sources":["hoc/Auxiliar.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","layout","className","classes","Content","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","console","log","length","BurguerBuilder","state","salad","bacon","cheese","meat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEeA,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,gBCadC,EATA,SAACF,GAAD,OACX,eAAC,EAAD,WACI,gEACA,sBAAMG,UAAWC,IAAQC,QAAzB,SACKL,EAAMC,e,OCqCJK,G,mLArCP,IAAIC,EAAa,KAErB,OAAQC,KAAKR,MAAMS,MACf,IAAM,eACFF,EAAa,qBAAKJ,UAAW,gBAC7B,MACJ,IAAM,YACFI,EACI,sBAAKJ,UAAW,WAAhB,UACI,qBAAKA,UAAW,WAChB,qBAAKA,UAAW,cAGxB,MACJ,IAAM,OACFI,EAAa,qBAAKJ,UAAW,SAC7B,MACJ,IAAM,SACFI,EAAa,qBAAKJ,UAAW,WAC7B,MACJ,IAAM,QACFI,EAAa,qBAAKJ,UAAW,UAC7B,MACJ,IAAM,QACFI,EAAa,qBAAKJ,UAAW,UAC7B,MACJ,QACII,EAAa,KAErB,OAAOA,M,GA/BoBG,cC4BhBC,EA3BA,SAACX,GAEZ,IAAIY,EAAyBC,OAAOC,KAAKd,EAAMe,aAC1CC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAMlB,EAAMe,YAAYE,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,cAAC,EAAD,CAAkCX,KAAMQ,GAAjBA,EAAQG,SAG7CC,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACnB,IAQP,OANAE,QAAQC,IAAId,GAE0B,IAAlCA,EAAuBe,SACvBf,EAAyB,mEAIzB,sBAAKT,UAAW,SAAhB,UACI,cAAC,EAAD,CAAkBM,KAAK,cACtBG,EACD,cAAC,EAAD,CAAkBH,KAAK,qBCJpBmB,E,4MAnBXC,MAAQ,CACJd,YAAa,CACTe,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,I,uDAKV,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CAAQlB,YAAaP,KAAKqB,MAAMd,cAChC,uD,GAdaL,aCWdwB,E,uKAXX,OACE,8BACE,cAAC,EAAD,UACE,cAAC,EAAD,Y,GALQxB,aCSHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c57fd9a4.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport Aux from '../../hoc/Auxiliar';\nimport classes from './Layout.css';\n\nconst layout = (props) => (\n    <Aux>\n        <div>Toolbar, SideDrawer, Backdrop</div>\n        <main className={classes.Content}>\n            {props.children}\n        </main>\n    </Aux>\n);\n\nexport default layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './BurgerIngredient.css';\n\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n    switch (this.props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={\"BreadBottom\"}></div>\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={\"BreadTop\"}>\n                    <div className={\"Seeds1\"}></div>\n                    <div className={\"Seeds2\"}></div>\n                </div>\n            );\n            break;\n        case ('meat'):\n            ingredient = <div className={\"Meat\"}></div>;\n            break;\n        case ('cheese'):\n            ingredient = <div className={\"Cheese\"}></div>;\n            break;\n        case ('bacon'):\n            ingredient = <div className={\"Bacon\"}></div>;\n            break;\n        case ('salad'):\n            ingredient = <div className={\"Salad\"}></div>;\n            break;\n        default:\n            ingredient = null;\n    }\n    return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport './Burger.css';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\n\nconst burger = (props) => {\n\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    \n    console.log(transformedIngredients);\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Pleasse start adding ingredients!</p>\n    }\n\n    return (\n        <div className={'Burger'}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliar'\nimport Burger from '../../components/Burger/Burger';\n\n\nclass BurguerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0, \n            cheese: 0,\n            meat: 0\n        }\n    };\n    \n    render() {\n        return (\n            <Aux>\n                <Burger ingredients={this.state.ingredients}/> \n                <div>Build Control</div>\n            </Aux>\n        );\n    }\n}\n\nexport default BurguerBuilder;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout'\nimport BurguerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurguerBuilder /> \n        </Layout>  \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}