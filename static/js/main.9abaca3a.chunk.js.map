{"version":3,"sources":["hoc/Auxiliar.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuilControls/BuildControl/BuildControl.js","components/Burger/BuilControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","layout","className","classes","Content","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","buildControl","label","onClick","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","backdrop","show","clicked","modal","modalClosed","style","transform","opacity","addClasses","args","btnType","push","join","button","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurguerBuilder","state","totalPrice","purchasing","addIngredientHandler","updatedCounted","updatedIngredientes","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinue","alert","sum","disabledInfo","key","OrderSummary","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9abaca3a.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\nimport Aux from '../../hoc/Auxiliar';\nimport classes from './Layout.css';\n\nconst layout = (props) => (\n    <Aux>\n        <div>Toolbar, SideDrawer, Backdrop</div>\n        <main className={classes.Content}>\n            {props.children}\n        </main>\n    </Aux>\n);\n\nexport default layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './BurgerIngredient.css';\n\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={\"BreadBottom\"}></div>\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={\"BreadTop\"}>\n                        <div className={\"Seeds1\"}></div>\n                        <div className={\"Seeds2\"}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={\"Meat\"}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={\"Cheese\"}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={\"Bacon\"}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={\"Salad\"}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport './Burger.css';\n\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\n\nconst burger = (props) => {\n\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    \n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Pleasse start adding ingredients!</p>\n    }\n\n    return (\n        <div className={'Burger'}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n}\n\nexport default burger;","import React from 'react';\n\nimport './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={'BuildControl'}>\n        <div className={'BuildControl'}>{props.label}</div>\n        <button \n            className={'Less'} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={'More'} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;\n","import React from 'react';\n\nimport './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl'\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' }\n]\n\nconst buildControls = (props) => (\n    <div className={'BuildControls'}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map((ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        )))}\n        <button \n            className={'OrderButton'}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React from 'react';\n\nimport './Backdrop.css'\n\nconst backdrop = (props) => {\n    return props.show ? <div className={'Backdrop'} onClick={props.clicked}></div>: null\n};\n\nexport default backdrop;","import React from 'react';\n\nimport './Modal.css';\nimport Aux from '../../../hoc/Auxiliar';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div \n            className={'Modal'}\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1': '0'\n            }}>\n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default modal;","import React from 'react';\n\nimport './Button.css'\n\nconst addClasses = (args) => {\n    let classes = ['Button'];\n    if (args.btnType === 'Danger')\n        classes.push('Danger')\n    else\n        classes.push('Success')\n    return classes.join(' ');\n}\n\nconst button = (props) => (\n    <button \n        className={addClasses(props)}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React from 'react';\n\nimport Aux from '../../../hoc/Auxiliar';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey}>\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\n                </li>\n            )\n        })\n    return (\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\n            <p>Continue to Checkout</p>\n            <Button btnType='Danger' clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType='Success' clicked={props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n    );\n};\n\nexport default orderSummary;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliar'\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuilControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurguerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0, \n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false\n    };\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({purchasable: sum > 0});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount + 1;\n        const updatedIngredientes = {\n            ...this.state.ingredients\n        };\n        updatedIngredientes[type] = updatedCounted;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        \n        this.setState({totalPrice: newPrice, ingredients: updatedIngredientes});\n        this.updatePurchaseState(updatedIngredientes);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCounted = oldCount - 1;\n        const updatedIngredientes = {\n            ...this.state.ingredients\n        };\n        updatedIngredientes[type] = updatedCounted;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        \n        this.setState({totalPrice: newPrice, ingredients: updatedIngredientes});\n        this.updatePurchaseState(updatedIngredientes);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinue = () => {\n        alert('You continue!');\n    }\n    \n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        }\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        \n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary \n                        ingredients={this.state.ingredients} \n                        price={this.state.totalPrice}\n                        purchaseCancelled={this.purchaseCancelHandler}\n                        purchaseContinued={this.purchaseContinue} />\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/> \n                <BuildControls \n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    disabled={disabledInfo}\n                    purchasable={this.state.purchasable}\n                    ordered={this.purchaseHandler}\n                    price={this.state.totalPrice} />\n            </Aux>\n        );\n    }\n}\n\nexport default BurguerBuilder;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout'\nimport BurguerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurguerBuilder /> \n        </Layout>  \n      </div>\n    );\n  }  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}